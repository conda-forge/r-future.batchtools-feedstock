{% set version = '0.7.1' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-future.batchtools
  version: {{ version|replace("-", "_") }}

source:
  fn: future.batchtools_{{ version }}.tar.gz
  url:
    - {{ cran_mirror }}/src/contrib/future.batchtools_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/future.batchtools/future.batchtools_{{ version }}.tar.gz
  sha256: 96c5e6845873473ea4f2a106a904afe8de3e960db0cf746143f561c33fbef755

build:
  noarch: generic
  merge_build_host: True  # [win]
  number: 1001
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]
  host:
    - r-base
    - r-batchtools >=0.9.8
    - r-future >=1.8.1
  run:
    - r-base
    - r-batchtools >=0.9.8
    - r-future >=1.8.1

test:
  commands:
    - $R -e "library('future.batchtools')"           # [not win]
    - "\"%R%\" -e \"library('future.batchtools')\""  # [win]

about:
  home: https://github.com/HenrikBengtsson/future.batchtools
  license: LGPL (>= 2.1)
  summary: Implementation of the Future API on top of the 'batchtools' package. This allows you
    to process futures, as defined by the 'future' package, in parallel out of the box,
    not only on your local machine or ad-hoc cluster of machines, but also via high-performance
    compute ('HPC') job schedulers such as 'LSF', 'OpenLava', 'Slurm', 'SGE', and 'TORQUE'
    / 'PBS', e.g. 'y <- future.apply::future_lapply(files, FUN = process)'.
  license_family: LGPL

extra:
  recipe-maintainers:
    - nick-youngblut
    - johanneskoester
    - bgruening
    - daler
    - jdblischak
    - cbrueffer
    - dbast
