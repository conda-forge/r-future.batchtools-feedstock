{% set version = "0.9.0" %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-future.batchtools
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/future.batchtools_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/future.batchtools/future.batchtools_{{ version }}.tar.gz
  sha256: 598ff86decf583cb13258c72a8c5a78538a27d9ab1538ab04da4dab437612ceb

build:
  merge_build_host: true  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]
  host:
    - r-base
    - r-batchtools >=0.9.8
    - r-future >=1.10.0
  run:
    - r-base
    - r-batchtools >=0.9.8
    - r-future >=1.10.0

test:
  commands:
    - $R -e "library('future.batchtools')"           # [not win]
    - "\"%R%\" -e \"library('future.batchtools')\""  # [win]

about:
  home: https://github.com/HenrikBengtsson/future.batchtools
  license: LGPL (>= 2.1)
  summary: Implementation of the Future API on top of the 'batchtools' package. This allows you to process futures, as defined by the 'future' package, in parallel
    out of the box, not only on your local machine or ad-hoc cluster of machines, but also via high-performance compute ('HPC') job schedulers such as 'LSF', 'OpenLava',
    'Slurm', 'SGE', and 'TORQUE' / 'PBS', e.g. 'y <- future.apply::future_lapply(files, FUN = process)'.
  license_family: LGPL
  license_file: {{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-2.1

extra:
  recipe-maintainers:
    - conda-forge/r
    - nick-youngblut

# Package: future.batchtools
# Version: 0.7.2
# Depends: R (>= 3.2.0), future (>= 1.10.0)
# Imports: batchtools (>= 0.9.8)
# Suggests: future.apply, listenv, markdown, R.rsp
# VignetteBuilder: R.rsp
# Title: A Future API for Parallel and Distributed Processing using 'batchtools'
# Authors@R: c(person("Henrik", "Bengtsson", role=c("aut", "cre", "cph"), email = "henrikb@braju.com"))
# Description: Implementation of the Future API on top of the 'batchtools' package. This allows you to process futures, as defined by the 'future' package, in parallel out of the box, not only on your local machine or ad-hoc cluster of machines, but also via high-performance compute ('HPC') job schedulers such as 'LSF', 'OpenLava', 'Slurm', 'SGE', and 'TORQUE' / 'PBS', e.g. 'y <- future.apply::future_lapply(files, FUN = process)'.
# License: LGPL (>= 2.1)
# LazyLoad: TRUE
# URL: https://github.com/HenrikBengtsson/future.batchtools
# BugReports: https://github.com/HenrikBengtsson/future.batchtools/issues
# RoxygenNote: 6.1.1
# NeedsCompilation: no
# Packaged: 2019-01-04 01:58:28 UTC; hb
# Author: Henrik Bengtsson [aut, cre, cph]
# Maintainer: Henrik Bengtsson <henrikb@braju.com>
# Repository: CRAN
# Date/Publication: 2019-01-04 13:50:15 UTC
